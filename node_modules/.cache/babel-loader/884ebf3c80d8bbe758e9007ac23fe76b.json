{"ast":null,"code":"var _jsxFileName = \"/home/bakarime/stackoverflow-tag-generator/stackoverflow-tag-generator-api/client/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nexport default function App() {\n  const [question, setQuestion] = useState('');\n  const [tags, setTags] = useState([]);\n\n  const fetchTags = async () => {\n    console.log(question);\n    let response = await fetch('/api/getRecommendedTags', {\n      headers: {\n        'content-type': 'application/json'\n      },\n      method: 'post',\n      body: JSON.stringify({\n        question\n      })\n    });\n    response = await response.json();\n    console.log(response); // SET TAGS\n\n    setTags(response);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://cdn.sstatic.net/Sites/stackoverflow/company/Img/logos/so/so-logo.svg?v=a010291124bf\",\n    className: \"stackoverflow_logo\",\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    id: \"header__text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }\n  }, \"Enter the question you intend to post to Stackoverflow to \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 83\n    }\n  }, \"generate a list of tags for the question!\")), /*#__PURE__*/React.createElement(\"textarea\", {\n    placeholder: \"Enter question here...\",\n    className: \"question__input\",\n    onChange: e => setQuestion(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"submit\",\n    onClick: fetchTags,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }\n  }, \"Get Tags!\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stackoverflow__tag__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }\n  }, tags.map(tag => {\n    return /*#__PURE__*/React.createElement(PredictedTag, {\n      key: tag,\n      tag: tag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    });\n  })));\n} // PREDICTED TAG COMPONENT\n\nconst PredictedTag = ({\n  tag\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stackoverflow__tag\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 3\n    }\n  }, tag);\n};","map":{"version":3,"sources":["/home/bakarime/stackoverflow-tag-generator/stackoverflow-tag-generator-api/client/src/App.js"],"names":["React","useState","App","question","setQuestion","tags","setTags","fetchTags","console","log","response","fetch","headers","method","body","JSON","stringify","json","e","target","value","map","tag","PredictedTag"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,WAAP;AAEA,eAAe,SAASC,GAAT,GAAe;AAE7B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMM,SAAS,GAAG,YAAW;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACA,QAAIO,QAAQ,GAAG,MAAMC,KAAK,CAAC,yBAAD,EAA4B;AACrDC,MAAAA,OAAO,EAAC;AACP,wBAAgB;AADT,OAD6C;AAIrDC,MAAAA,MAAM,EAAE,MAJ6C;AAKrDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACpBb,QAAAA;AADoB,OAAf;AAL+C,KAA5B,CAA1B;AAUAO,IAAAA,QAAQ,GAAG,MAAMA,QAAQ,CAACO,IAAT,EAAjB;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,EAb4B,CAe5B;;AACAJ,IAAAA,OAAO,CAACI,QAAD,CAAP;AAEA,GAlBD;;AAoBA,sBACC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,GAAG,EAAC,6FAAT;AAAuG,IAAA,SAAS,EAAC,oBAAjH;AAAsI,IAAA,GAAG,EAAC,MAA1I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD,eAKC;AAAG,IAAA,EAAE,EAAC,cAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gFAA+E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAA/E,CALD,eAOC;AACC,IAAA,WAAW,EAAC,wBADb;AAEC,IAAA,SAAS,EAAC,iBAFX;AAGC,IAAA,QAAQ,EAAEQ,CAAC,IAAId,WAAW,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV,CAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPD,eAYC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZD,eAaC;AACC,IAAA,EAAE,EAAC,QADJ;AAEC,IAAA,OAAO,EAAEb,SAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAbD,eAsBC;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAECF,IAAI,CAACgB,GAAL,CAAUC,GAAD,IAAS;AACjB,wBAAO,oBAAC,YAAD;AACP,MAAA,GAAG,EAAGA,GADC;AAEP,MAAA,GAAG,EAAEA,GAFE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAIA,GALD,CAFD,CAtBD,CADD;AAoCA,C,CAED;;AACA,MAAMC,YAAY,GAAG,CAAC;AAACD,EAAAA;AAAD,CAAD,KAAW;AAC/B,sBACC;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEA,GADF,CADD;AAKA,CAND","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\n\nexport default function App() {\n\n\tconst [question, setQuestion] = useState('');\n\tconst [tags, setTags] = useState([]);\n\n\tconst fetchTags = async() => {\n\t\tconsole.log(question)\n\t\tlet response = await fetch('/api/getRecommendedTags', {\n\t\t\theaders:{\n\t\t\t\t'content-type': 'application/json'\n\t\t\t},\n\t\t\tmethod: 'post',\n\t\t\tbody: JSON.stringify({\n\t\t\t\tquestion\n\t\t\t})\n\t\t})\n\n\t\tresponse = await response.json();\n\t\tconsole.log(response)\n\n\t\t// SET TAGS\n\t\tsetTags(response)\n\n\t}\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\t\t<img src=\"https://cdn.sstatic.net/Sites/stackoverflow/company/Img/logos/so/so-logo.svg?v=a010291124bf\" className=\"stackoverflow_logo\" alt=\"logo\"/>\n\t\t\t</header>\n\n\t\t\t<p id=\"header__text\">Enter the question you intend to post to Stackoverflow to <span>generate a list of tags for the question!</span></p>\n\n\t\t\t<textarea \n\t\t\t\tplaceholder=\"Enter question here...\"\n\t\t\t\tclassName=\"question__input\"\n\t\t\t\tonChange={e => setQuestion(e.target.value)}\n\t\t\t/>\n\t\t\t<br />\n\t\t\t<button \n\t\t\t\tid=\"submit\"\n\t\t\t\tonClick={fetchTags}\n\t\t\t>\n\t\t\t\tGet Tags!\n\t\t\t</button>\n\n\t\t\t{/* PREDICTED TAGS */}\n\t\t\t\n\t\t\t<div className=\"stackoverflow__tag__container\">\n\t\t\t{\n\t\t\t\ttags.map((tag) => {\n\t\t\t\t\treturn <PredictedTag \n\t\t\t\t\tkey= {tag}\n\t\t\t\t\ttag={tag}\n\t\t\t\t/>\n\t\t\t\t})\n\t\t\t}\n\t\t\t</div>\n\t\t\t\n\t\t</div>\n\t);\n}\n\n// PREDICTED TAG COMPONENT\nconst PredictedTag = ({tag}) => {\n\treturn(\n\t\t<div className=\"stackoverflow__tag\">\n\t\t\t{tag}\n\t\t</div>\n\t)\n}"]},"metadata":{},"sourceType":"module"}