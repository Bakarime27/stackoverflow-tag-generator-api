{"ast":null,"code":"import _regeneratorRuntime from\"/home/bakarime/stackoverflow-tag-generator/stackoverflow-tag-generator-api/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/bakarime/stackoverflow-tag-generator/stackoverflow-tag-generator-api/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/bakarime/stackoverflow-tag-generator/stackoverflow-tag-generator-api/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import'./App.css';export default function App(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),question=_useState2[0],setQuestion=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),tags=_useState4[0],setTags=_useState4[1];var fetchTags=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log(question);_context.next=3;return fetch('/autotag',{headers:{'content-type':'application/json'},method:'post',body:JSON.stringify({question:question})});case 3:response=_context.sent;_context.next=6;return response.json();case 6:response=_context.sent;console.log(response);// SET TAGS\nsetTags(response);case 9:case\"end\":return _context.stop();}}},_callee);}));return function fetchTags(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(\"header\",{className:\"App-header\"},/*#__PURE__*/React.createElement(\"img\",{src:\"https://cdn.sstatic.net/Sites/stackoverflow/company/Img/logos/so/so-logo.svg?v=a010291124bf\",className:\"stackoverflow_logo\",alt:\"logo\"})),/*#__PURE__*/React.createElement(\"p\",{id:\"header__text\"},\"Enter the question you intend to post to Stackoverflow to \",/*#__PURE__*/React.createElement(\"span\",null,\"generate a list of tags for the question!\")),/*#__PURE__*/React.createElement(\"textarea\",{placeholder:\"Enter question here...\",className:\"question__input\",onChange:function onChange(e){return setQuestion(e.target.value);}}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"button\",{id:\"submit\",onClick:fetchTags},\"Get Tags!\"),/*#__PURE__*/React.createElement(\"div\",{className:\"stackoverflow__tag__container\"},tags.map(function(tag){return/*#__PURE__*/React.createElement(PredictedTag,{key:tag,tag:tag});})));}// PREDICTED TAG COMPONENT\nvar PredictedTag=function PredictedTag(_ref2){var tag=_ref2.tag;return/*#__PURE__*/React.createElement(\"div\",{className:\"stackoverflow__tag\"},tag);};","map":{"version":3,"sources":["/home/bakarime/stackoverflow-tag-generator/stackoverflow-tag-generator-api/client/src/App.js"],"names":["React","useState","App","question","setQuestion","tags","setTags","fetchTags","console","log","fetch","headers","method","body","JSON","stringify","response","json","e","target","value","map","tag","PredictedTag"],"mappings":"qlBAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,MAAO,WAAP,CAEA,cAAe,SAASC,CAAAA,GAAT,EAAe,eAEGD,QAAQ,CAAC,EAAD,CAFX,wCAEtBE,QAFsB,eAEZC,WAFY,8BAGLH,QAAQ,CAAC,EAAD,CAHH,yCAGtBI,IAHsB,eAGhBC,OAHgB,eAK7B,GAAMC,CAAAA,SAAS,0FAAG,gJACjBC,OAAO,CAACC,GAAR,CAAYN,QAAZ,EADiB,sBAEIO,CAAAA,KAAK,CAAC,UAAD,CAAa,CACtCC,OAAO,CAAC,CACP,eAAgB,kBADT,CAD8B,CAItCC,MAAM,CAAE,MAJ8B,CAKtCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACpBZ,QAAQ,CAARA,QADoB,CAAf,CALgC,CAAb,CAFT,QAEba,QAFa,qCAYAA,CAAAA,QAAQ,CAACC,IAAT,EAZA,QAYjBD,QAZiB,eAajBR,OAAO,CAACC,GAAR,CAAYO,QAAZ,EAEA;AACAV,OAAO,CAACU,QAAD,CAAP,CAhBiB,sDAAH,kBAATT,CAAAA,SAAS,0CAAf,CAoBA,mBACC,2BAAK,SAAS,CAAC,KAAf,eACC,8BAAQ,SAAS,CAAC,YAAlB,eACC,2BAAK,GAAG,CAAC,6FAAT,CAAuG,SAAS,CAAC,oBAAjH,CAAsI,GAAG,CAAC,MAA1I,EADD,CADD,cAKC,yBAAG,EAAE,CAAC,cAAN,4EAA+E,4EAA/E,CALD,cAOC,gCACC,WAAW,CAAC,wBADb,CAEC,SAAS,CAAC,iBAFX,CAGC,QAAQ,CAAE,kBAAAW,CAAC,QAAId,CAAAA,WAAW,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf,EAHZ,EAPD,cAYC,8BAZD,cAaC,8BACC,EAAE,CAAC,QADJ,CAEC,OAAO,CAAEb,SAFV,cAbD,cAsBC,2BAAK,SAAS,CAAC,+BAAf,EAECF,IAAI,CAACgB,GAAL,CAAS,SAACC,GAAD,CAAS,CACjB,mBAAO,oBAAC,YAAD,EACP,GAAG,CAAGA,GADC,CAEP,GAAG,CAAEA,GAFE,EAAP,CAIA,CALD,CAFD,CAtBD,CADD,CAoCA,CAED;AACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,OAAW,IAATD,CAAAA,GAAS,OAATA,GAAS,CAC/B,mBACC,2BAAK,SAAS,CAAC,oBAAf,EACEA,GADF,CADD,CAKA,CAND","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\n\nexport default function App() {\n\n\tconst [question, setQuestion] = useState('');\n\tconst [tags, setTags] = useState([]);\n\n\tconst fetchTags = async() => {\n\t\tconsole.log(question)\n\t\tlet response = await fetch('/autotag', {\n\t\t\theaders:{\n\t\t\t\t'content-type': 'application/json'\n\t\t\t},\n\t\t\tmethod: 'post',\n\t\t\tbody: JSON.stringify({\n\t\t\t\tquestion\n\t\t\t})\n\t\t})\n\n\t\tresponse = await response.json();\n\t\tconsole.log(response)\n\n\t\t// SET TAGS\n\t\tsetTags(response)\n\n\t}\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\t\t<img src=\"https://cdn.sstatic.net/Sites/stackoverflow/company/Img/logos/so/so-logo.svg?v=a010291124bf\" className=\"stackoverflow_logo\" alt=\"logo\"/>\n\t\t\t</header>\n\n\t\t\t<p id=\"header__text\">Enter the question you intend to post to Stackoverflow to <span>generate a list of tags for the question!</span></p>\n\n\t\t\t<textarea \n\t\t\t\tplaceholder=\"Enter question here...\"\n\t\t\t\tclassName=\"question__input\"\n\t\t\t\tonChange={e => setQuestion(e.target.value)}\n\t\t\t/>\n\t\t\t<br />\n\t\t\t<button \n\t\t\t\tid=\"submit\"\n\t\t\t\tonClick={fetchTags}\n\t\t\t>\n\t\t\t\tGet Tags!\n\t\t\t</button>\n\n\t\t\t{/* PREDICTED TAGS */}\n\t\t\t\n\t\t\t<div className=\"stackoverflow__tag__container\">\n\t\t\t{\n\t\t\t\ttags.map((tag) => {\n\t\t\t\t\treturn <PredictedTag \n\t\t\t\t\tkey= {tag}\n\t\t\t\t\ttag={tag}\n\t\t\t\t/>\n\t\t\t\t})\n\t\t\t}\n\t\t\t</div>\n\t\t\t\n\t\t</div>\n\t);\n}\n\n// PREDICTED TAG COMPONENT\nconst PredictedTag = ({tag}) => {\n\treturn(\n\t\t<div className=\"stackoverflow__tag\">\n\t\t\t{tag}\n\t\t</div>\n\t)\n}"]},"metadata":{},"sourceType":"module"}